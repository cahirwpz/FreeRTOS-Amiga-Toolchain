Index: fs-uae/fs-uae/src/debug.cpp
===================================================================
--- fs-uae.orig/fs-uae/src/debug.cpp
+++ fs-uae/fs-uae/src/debug.cpp
@@ -4836,7 +4836,7 @@ static bool debug_line (TCHAR *input)
 					debug_illegal_mask = debug_illegal ? 0 : -1;
 					debug_illegal_mask &= ~((uae_u64)255 << 24); // mask interrupts
 				}
-				console_out_f (_T("Exception breakpoint mask: %0I64X\n"), debug_illegal_mask);
+				console_out_f (_T("Exception breakpoint mask: %016" PRIx64 "\n"), debug_illegal_mask);
 				debug_illegal = debug_illegal_mask ? 1 : 0;
 			} else {
 				addr = 0xffffffff;
Index: fs-uae/fs-uae/src/newcpu.cpp
===================================================================
--- fs-uae.orig/fs-uae/src/newcpu.cpp
+++ fs-uae/fs-uae/src/newcpu.cpp
@@ -2191,6 +2191,7 @@ static void exception_debug (int nr)
 		return;
 	console_out_f (_T("Exception %d, PC=%08X\n"), nr, M68K_GETPC);
 #endif
+	console_out_f (_T("Exception %d, PC=%08X\n"), nr, M68K_GETPC);
 }
 
 #ifdef CPUEMU_13
@@ -2993,7 +2994,7 @@ static void ExceptionX (int nr, uaecptr
 
 	if (debug_illegal && !in_rom (M68K_GETPC)) {
 		if (nr <= 63 && (debug_illegal_mask & ((uae_u64)1 << nr))) {
-			write_log (_T("Exception %d breakpoint\n"), nr);
+			console_out_f (_T("Exception %d breakpoint\n"), nr);
 			activate_debugger ();
 		}
 	}
